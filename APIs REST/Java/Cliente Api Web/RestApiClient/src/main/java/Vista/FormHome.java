// Written by Ismael Heredia in the year 2017
package Vista;

import Funciones.Funciones;
import Modelo.Producto;
import Modelo.Proveedor;
import Modelo.Usuario;
import com.google.gson.Gson;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONObject;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

public class FormHome extends javax.swing.JFrame {

    Funciones funcion = new Funciones();
    private List<Proveedor> lista_proveedores = new ArrayList<Proveedor>();

    public FormHome() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpOptions = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jpIngreseURL = new javax.swing.JPanel();
        txtURL = new javax.swing.JTextField();
        jpTipo = new javax.swing.JPanel();
        rbJSON = new javax.swing.JRadioButton();
        rbXML = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jpDatosProducto = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        txtID_Producto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        lblProveedor = new javax.swing.JLabel();
        cmbProveedor = new javax.swing.JComboBox();
        lblPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnCLEAR_Producto = new javax.swing.JButton();
        btnGET_Producto = new javax.swing.JButton();
        btnPOST_Producto = new javax.swing.JButton();
        btnPUT_Producto = new javax.swing.JButton();
        btnDEL_Producto = new javax.swing.JButton();
        jpProductos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lvProductos = new javax.swing.JTable();
        lblNombreBuscar = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        btnBuscarProducto = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jpDatosProveedor = new javax.swing.JPanel();
        lblNombre1 = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        txtNombreEmpresa = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtID_Proveedor = new javax.swing.JTextField();
        btnCLEAR_Proveedor = new javax.swing.JButton();
        btnGET_Proveedor = new javax.swing.JButton();
        btnPOST_Proveedor = new javax.swing.JButton();
        btnPUT_Proveedor = new javax.swing.JButton();
        btnDEL_Proveedor = new javax.swing.JButton();
        jpProveedores = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lvProveedores = new javax.swing.JTable();
        lblNombreBuscar1 = new javax.swing.JLabel();
        txtBuscarProveedor = new javax.swing.JTextField();
        btnBuscarProveedor = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jpAgregarUsuario = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        cmbTipo = new javax.swing.JComboBox();
        txtID_Usuario = new javax.swing.JTextField();
        btnCLEAR_Usuario = new javax.swing.JButton();
        btnGET_Usuario = new javax.swing.JButton();
        btnPOST_Usuario = new javax.swing.JButton();
        btnPUT_Usuario = new javax.swing.JButton();
        btnDEL_Usuario = new javax.swing.JButton();
        jpUsuarios = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lvUsuarios = new javax.swing.JTable();
        lblNombreBuscar2 = new javax.swing.JLabel();
        txtBuscarUsuario = new javax.swing.JTextField();
        btnBuscarUsuario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rest Api Client");
        setResizable(false);

        jpIngreseURL.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingrese URL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtURL.setText("http://localhost:8080/RestApiServer");
        txtURL.setName(""); // NOI18N

        javax.swing.GroupLayout jpIngreseURLLayout = new javax.swing.GroupLayout(jpIngreseURL);
        jpIngreseURL.setLayout(jpIngreseURLLayout);
        jpIngreseURLLayout.setHorizontalGroup(
            jpIngreseURLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIngreseURLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpIngreseURLLayout.setVerticalGroup(
            jpIngreseURLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIngreseURLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpTipo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        rbJSON.setSelected(true);
        rbJSON.setText("JSON");

        rbXML.setText("XML");

        javax.swing.GroupLayout jpTipoLayout = new javax.swing.GroupLayout(jpTipo);
        jpTipo.setLayout(jpTipoLayout);
        jpTipoLayout.setHorizontalGroup(
            jpTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbJSON)
                .addGap(18, 18, 18)
                .addComponent(rbXML)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpTipoLayout.setVerticalGroup(
            jpTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbJSON)
                    .addComponent(rbXML))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpIngreseURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(474, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpIngreseURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        tpOptions.addTab("API", jPanel1);

        jpDatosProducto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        txtNombre.setName(""); // NOI18N

        lblNombre.setText("Nombre : ");

        lblDescripcion.setText("Descripcion : ");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        lblProveedor.setText("Proveedor : ");

        lblPrecio.setText("Precio : ");

        btnCLEAR_Producto.setText("CLEAR");
        btnCLEAR_Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLEAR_ProductoActionPerformed(evt);
            }
        });

        btnGET_Producto.setText("GET");
        btnGET_Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGET_ProductoActionPerformed(evt);
            }
        });

        btnPOST_Producto.setText("POST");
        btnPOST_Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOST_ProductoActionPerformed(evt);
            }
        });

        btnPUT_Producto.setText("PUT");
        btnPUT_Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPUT_ProductoActionPerformed(evt);
            }
        });

        btnDEL_Producto.setText("DEL");
        btnDEL_Producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDEL_ProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDatosProductoLayout = new javax.swing.GroupLayout(jpDatosProducto);
        jpDatosProducto.setLayout(jpDatosProductoLayout);
        jpDatosProductoLayout.setHorizontalGroup(
            jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jpDatosProductoLayout.createSequentialGroup()
                        .addComponent(lblProveedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbProveedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpDatosProductoLayout.createSequentialGroup()
                        .addComponent(lblPrecio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrecio))
                    .addGroup(jpDatosProductoLayout.createSequentialGroup()
                        .addComponent(btnPOST_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPUT_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDEL_Producto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpDatosProductoLayout.createSequentialGroup()
                        .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpDatosProductoLayout.createSequentialGroup()
                                .addComponent(lblNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpDatosProductoLayout.createSequentialGroup()
                                .addComponent(lblDescripcion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpDatosProductoLayout.createSequentialGroup()
                                .addComponent(btnCLEAR_Producto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGET_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpDatosProductoLayout.setVerticalGroup(
            jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosProductoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescripcion)
                    .addComponent(txtID_Producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProveedor)
                    .addComponent(cmbProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCLEAR_Producto)
                    .addComponent(btnGET_Producto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDatosProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPOST_Producto)
                    .addComponent(btnPUT_Producto)
                    .addComponent(btnDEL_Producto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpProductos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lvProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Descripcion", "Precio", "Fecha", "Proveedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lvProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lvProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lvProductos);

        lblNombreBuscar.setText("Nombre : ");

        btnBuscarProducto.setText("Buscar");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpProductosLayout = new javax.swing.GroupLayout(jpProductos);
        jpProductos.setLayout(jpProductosLayout);
        jpProductosLayout.setHorizontalGroup(
            jpProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProductosLayout.createSequentialGroup()
                .addGroup(jpProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpProductosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblNombreBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpProductosLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpProductosLayout.setVerticalGroup(
            jpProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpProductosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreBuscar)
                    .addComponent(txtBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpDatosProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jpDatosProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 52, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tpOptions.addTab("Productos", jPanel2);

        jpDatosProveedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del proveedor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblNombre1.setText("Nombre : ");

        lblDireccion.setText("Direccion :  ");

        lblTelefono.setText("Telefono : ");

        btnCLEAR_Proveedor.setText("CLEAR");
        btnCLEAR_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLEAR_ProveedorActionPerformed(evt);
            }
        });

        btnGET_Proveedor.setText("GET");
        btnGET_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGET_ProveedorActionPerformed(evt);
            }
        });

        btnPOST_Proveedor.setText("POST");
        btnPOST_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOST_ProveedorActionPerformed(evt);
            }
        });

        btnPUT_Proveedor.setText("PUT");
        btnPUT_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPUT_ProveedorActionPerformed(evt);
            }
        });

        btnDEL_Proveedor.setText("DEL");
        btnDEL_Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDEL_ProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpDatosProveedorLayout = new javax.swing.GroupLayout(jpDatosProveedor);
        jpDatosProveedor.setLayout(jpDatosProveedorLayout);
        jpDatosProveedorLayout.setHorizontalGroup(
            jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                        .addComponent(lblNombre1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreEmpresa))
                    .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                        .addComponent(lblDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccion))
                    .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                        .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTelefono)
                            .addComponent(txtID_Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addComponent(txtTelefono))
                    .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                        .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPOST_Proveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCLEAR_Proveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnGET_Proveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(btnPUT_Proveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDEL_Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpDatosProveedorLayout.setVerticalGroup(
            jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDatosProveedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre1)
                    .addComponent(txtNombreEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtID_Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCLEAR_Proveedor)
                    .addComponent(btnGET_Proveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpDatosProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPOST_Proveedor)
                    .addComponent(btnPUT_Proveedor)
                    .addComponent(btnDEL_Proveedor))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpProveedores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Proveedores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lvProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Direccion", "Telefono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lvProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lvProveedoresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lvProveedores);

        lblNombreBuscar1.setText("Nombre: ");

        btnBuscarProveedor.setText("Buscar");
        btnBuscarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpProveedoresLayout = new javax.swing.GroupLayout(jpProveedores);
        jpProveedores.setLayout(jpProveedoresLayout);
        jpProveedoresLayout.setHorizontalGroup(
            jpProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProveedoresLayout.createSequentialGroup()
                .addGroup(jpProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpProveedoresLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                    .addGroup(jpProveedoresLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblNombreBuscar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpProveedoresLayout.setVerticalGroup(
            jpProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpProveedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpProveedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreBuscar1)
                    .addComponent(txtBuscarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpDatosProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpProveedores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpDatosProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        tpOptions.addTab("Proveedores", jPanel3);

        jpAgregarUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblUsuario.setText("Usuario : ");

        lblPassword.setText("Password : ");

        lblTipo.setText("Tipo : ");

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Usuario", "Administrador" }));

        btnCLEAR_Usuario.setText("CLEAR");
        btnCLEAR_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCLEAR_UsuarioActionPerformed(evt);
            }
        });

        btnGET_Usuario.setText("GET");
        btnGET_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGET_UsuarioActionPerformed(evt);
            }
        });

        btnPOST_Usuario.setText("POST");
        btnPOST_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOST_UsuarioActionPerformed(evt);
            }
        });

        btnPUT_Usuario.setText("PUT");
        btnPUT_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPUT_UsuarioActionPerformed(evt);
            }
        });

        btnDEL_Usuario.setText("DEL");
        btnDEL_Usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDEL_UsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAgregarUsuarioLayout = new javax.swing.GroupLayout(jpAgregarUsuario);
        jpAgregarUsuario.setLayout(jpAgregarUsuarioLayout);
        jpAgregarUsuarioLayout.setHorizontalGroup(
            jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                        .addComponent(lblUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsuario))
                    .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                        .addComponent(lblPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPassword))
                    .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                        .addComponent(lblTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtID_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                        .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnPOST_Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCLEAR_Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                                .addComponent(btnGET_Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(57, 57, 57))
                            .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                                .addComponent(btnPUT_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDEL_Usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jpAgregarUsuarioLayout.setVerticalGroup(
            jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAgregarUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipo)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(txtID_Usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCLEAR_Usuario)
                    .addComponent(btnGET_Usuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAgregarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPOST_Usuario)
                    .addComponent(btnPUT_Usuario)
                    .addComponent(btnDEL_Usuario))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jpUsuarios.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lvUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Nombre", "Fecha Registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lvUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lvUsuariosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lvUsuarios);

        lblNombreBuscar2.setText("Nombre : ");

        btnBuscarUsuario.setText("Buscar");
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpUsuariosLayout = new javax.swing.GroupLayout(jpUsuarios);
        jpUsuarios.setLayout(jpUsuariosLayout);
        jpUsuariosLayout.setHorizontalGroup(
            jpUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUsuariosLayout.createSequentialGroup()
                .addGroup(jpUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpUsuariosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpUsuariosLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblNombreBuscar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpUsuariosLayout.setVerticalGroup(
            jpUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpUsuariosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jpUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreBuscar2)
                    .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpAgregarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpAgregarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(169, Short.MAX_VALUE))
        );

        tpOptions.addTab("Usuarios", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpOptions)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpOptions)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cargarListaProductos() {

        String url = txtURL.getText();
        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        DefaultTableModel limpiar = (DefaultTableModel) lvProductos.getModel();
        while (limpiar.getRowCount() > 0) {
            limpiar.removeRow(0);
        }

        String contenido = funcion.getApi(txtURL.getText() + "/rest/" + tipo + "/productos", tipo);

        ArrayList listaProductos = new ArrayList();

        if (rbJSON.isSelected()) {

            JSONArray json_array = new JSONArray(contenido);
            for (int i = 0; i < json_array.length(); i++) {
                JSONObject json_object = json_array.getJSONObject(i);
                int id_producto = json_object.getInt("id_producto");
                String nombre_producto = json_object.getString("nombre_producto");
                String descripcion = json_object.getString("descripcion");
                int precio = json_object.getInt("precio");
                String fecha_registro = json_object.getString("fecha_registro");
                int id_proveedor = json_object.getInt("id_proveedor");
                Producto producto = new Producto(id_producto, nombre_producto, descripcion, precio, fecha_registro, id_proveedor);
                listaProductos.add(producto);
            }

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                Element document_element = dom.getDocumentElement();

                NodeList node_list = document_element.getElementsByTagName("producto");

                for (int i = 0; i < node_list.getLength(); i++) {

                    Element element = (Element) node_list.item(i);

                    int id_producto = funcion.getIntTagXML(element, "id_producto");
                    String nombre_producto = funcion.getStringTagXML(element, "nombre_producto");
                    String descripcion = funcion.getStringTagXML(element, "descripcion");
                    double precio = funcion.getDoubleTagXML(element, "precio");
                    String fecha_registro = funcion.getStringTagXML(element, "fecha_registro");
                    int id_proveedor = funcion.getIntTagXML(element, "id_proveedor");

                    Producto producto = new Producto(id_producto, nombre_producto, descripcion, precio, fecha_registro, id_proveedor);
                    listaProductos.add(producto);

                }

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        for (int i = 0; i < listaProductos.size(); i++) {

            Producto producto = (Producto) listaProductos.get(i);

            int id_producto = producto.getId_producto();
            String nombre_producto = producto.getNombre_producto();
            String descripcion = producto.getDescripcion();
            double precio = producto.getPrecio();
            String fecha_registro = producto.getFecha_registro();
            int id_proveedor = producto.getId_proveedor();

            String nombre_proveedor = funcion.cargarNombreProveedor(id_proveedor, url, tipo);

            if (nombre_producto.toLowerCase().contains(txtBuscarProducto.getText().toLowerCase())) {
                DefaultTableModel modelo = (DefaultTableModel) lvProductos.getModel();
                modelo.addRow(new Object[]{id_producto, nombre_producto, descripcion, precio, fecha_registro, nombre_proveedor});
            }

        }

    }

    public void recargarListaProductos() {
        cargarListaProductos();
        cargarComboProveedores();
    }

    public void cargarCamposProducto(int id_producto_to_load) {

        String url = txtURL.getText();
        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        String contenido = funcion.getApi(url + "/rest/" + tipo + "/productos/" + id_producto_to_load, tipo);

        int id_producto = 0;
        String nombre_producto = "";
        String descripcion = "";
        double precio = 0;
        String fecha_registro = "";
        int id_proveedor = 0;
        String nombre_proveedor = "";

        if (rbJSON.isSelected()) {

            JSONObject json_object = new JSONObject(contenido);

            id_producto = json_object.getInt("id_producto");
            nombre_producto = json_object.getString("nombre_producto");
            descripcion = json_object.getString("descripcion");
            precio = json_object.getInt("precio");
            fecha_registro = json_object.getString("fecha_registro");
            id_proveedor = json_object.getInt("id_proveedor");
            nombre_proveedor = funcion.cargarNombreProveedor(id_proveedor, url, tipo);

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                XPathFactory factory = XPathFactory.newInstance();
                XPath xpath = factory.newXPath();

                id_producto = Integer.parseInt(xpath.evaluate("//producto/id_producto", dom));
                nombre_producto = (String) xpath.evaluate("//producto/nombre_producto", dom);
                descripcion = (String) xpath.evaluate("//producto/descripcion", dom);
                precio = Double.parseDouble(xpath.evaluate("//producto/precio", dom));
                fecha_registro = (String) xpath.evaluate("//producto/fecha_registro", dom);
                id_proveedor = (Integer.parseInt(xpath.evaluate("//producto/id_proveedor", dom)));
                nombre_proveedor = funcion.cargarNombreProveedor(id_proveedor, url, tipo);

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        txtID_Producto.setText(Integer.toString(id_producto));
        txtNombre.setText(nombre_producto);
        txtDescripcion.setText(descripcion);
        txtPrecio.setText(Double.toString(precio));

        cmbProveedor.setSelectedItem(nombre_proveedor);
    }

    public void cargarListaProveedores() {

        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        DefaultTableModel limpiar = (DefaultTableModel) lvProveedores.getModel();
        while (limpiar.getRowCount() > 0) {
            limpiar.removeRow(0);
        }

        String contenido = funcion.getApi(txtURL.getText() + "/rest/" + tipo + "/proveedores", tipo);

        ArrayList listaProveedores = new ArrayList();

        if (rbJSON.isSelected()) {

            JSONArray json_array = new JSONArray(contenido);
            for (int i = 0; i < json_array.length(); i++) {
                JSONObject json_object = json_array.getJSONObject(i);
                int id_proveedor = json_object.getInt("id_proveedor");
                String nombre_empresa = json_object.getString("nombre_empresa");
                String direccion = json_object.getString("direccion");
                int telefono = json_object.getInt("telefono");
                String fecha_registro = json_object.getString("fecha_registro");
                Proveedor proveedor = new Proveedor(id_proveedor, nombre_empresa, direccion, telefono, fecha_registro);
                listaProveedores.add(proveedor);
            }

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                Element document_element = dom.getDocumentElement();

                NodeList node_list = document_element.getElementsByTagName("proveedor");

                for (int i = 0; i < node_list.getLength(); i++) {

                    Element element = (Element) node_list.item(i);

                    int id_proveedor = funcion.getIntTagXML(element, "id_proveedor");
                    String nombre_empresa = funcion.getStringTagXML(element, "nombre_empresa");
                    String direccion = funcion.getStringTagXML(element, "direccion");
                    int telefono = funcion.getIntTagXML(element, "telefono");
                    String fecha_registro = funcion.getStringTagXML(element, "fecha_registro");
                    Proveedor proveedor = new Proveedor(id_proveedor, nombre_empresa, direccion, telefono, fecha_registro);
                    listaProveedores.add(proveedor);
                }

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        for (int i = 0; i < listaProveedores.size(); i++) {
            Proveedor proveedor = (Proveedor) listaProveedores.get(i);
            int id_proveedor = proveedor.getId_proveedor();
            String nombre_empresa = proveedor.getNombre_empresa();
            String direccion = proveedor.getDireccion();
            int telefono = proveedor.getTelefono();
            String fecha_registro = proveedor.getFecha_registro();

            if (nombre_empresa.toLowerCase().contains(txtBuscarProveedor.getText().toLowerCase())) {
                DefaultTableModel modelo = (DefaultTableModel) lvProveedores.getModel();
                modelo.addRow(new Object[]{id_proveedor, nombre_empresa, direccion, telefono});
            }

        }

    }

    public void cargarCamposProveedor(int id_proveedor_to_load) {

        String url = txtURL.getText();
        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        String contenido = funcion.getApi(url + "/rest/" + tipo + "/proveedores/" + id_proveedor_to_load, tipo);

        int id_proveedor = 0;
        String nombre_empresa = "";
        String direccion = "";
        int telefono = 0;
        String fecha_registro = "";

        if (rbJSON.isSelected()) {

            JSONObject json_object = new JSONObject(contenido);

            id_proveedor = json_object.getInt("id_proveedor");
            nombre_empresa = json_object.getString("nombre_empresa");
            direccion = json_object.getString("direccion");
            telefono = json_object.getInt("telefono");
            fecha_registro = json_object.getString("fecha_registro");

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                XPathFactory factory = XPathFactory.newInstance();
                XPath xpath = factory.newXPath();

                id_proveedor = Integer.parseInt(xpath.evaluate("//proveedor/id_proveedor", dom));
                nombre_empresa = (String) xpath.evaluate("//proveedor/nombre_empresa", dom);
                direccion = (String) xpath.evaluate("//proveedor/direccion", dom);
                telefono = Integer.parseInt(xpath.evaluate("//proveedor/telefono", dom));
                fecha_registro = (String) xpath.evaluate("//proveedor/fecha_registro", dom);

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        txtID_Proveedor.setText(Integer.toString(id_proveedor));
        txtNombreEmpresa.setText(nombre_empresa);
        txtDireccion.setText(direccion);
        txtTelefono.setText(Integer.toString(telefono));

    }

    public void cargarComboProveedores() {

        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        String contenido = funcion.getApi(txtURL.getText() + "/rest/" + tipo + "/proveedores", tipo);

        ArrayList proveedores = new ArrayList();

        if (rbJSON.isSelected()) {

            JSONArray json_array = new JSONArray(contenido);
            for (int i = 0; i < json_array.length(); i++) {
                JSONObject json_object = json_array.getJSONObject(i);
                int id_proveedor = json_object.getInt("id_proveedor");
                String nombre_empresa = json_object.getString("nombre_empresa");
                Proveedor proveedor = new Proveedor();
                proveedor.setId_proveedor(id_proveedor);
                proveedor.setNombre_empresa(nombre_empresa);
                proveedores.add(proveedor);
            }

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                Element document_element = dom.getDocumentElement();

                NodeList node_list = document_element.getElementsByTagName("proveedor");

                for (int i = 0; i < node_list.getLength(); i++) {

                    Element element = (Element) node_list.item(i);

                    int id_proveedor = funcion.getIntTagXML(element, "id_proveedor");
                    String nombre_empresa = funcion.getStringTagXML(element, "nombre_empresa");
                    Proveedor proveedor = new Proveedor();
                    proveedor.setId_proveedor(id_proveedor);
                    proveedor.setNombre_empresa(nombre_empresa);
                    proveedores.add(proveedor);
                }

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        DefaultComboBoxModel modelo1 = new DefaultComboBoxModel();

        for (int i = 0; i < proveedores.size(); i++) {
            Proveedor proveedor = (Proveedor) proveedores.get(i);
            String nombre_empresa = proveedor.getNombre_empresa();
            modelo1.addElement(nombre_empresa);
            lista_proveedores.add(proveedor);
        }

        cmbProveedor.setModel(modelo1);

    }

    public void cargarListaUsuarios() {

        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        DefaultTableModel limpiar = (DefaultTableModel) lvUsuarios.getModel();
        while (limpiar.getRowCount() > 0) {
            limpiar.removeRow(0);
        }

        String contenido = funcion.getApi(txtURL.getText() + "/rest/" + tipo + "/usuarios", tipo);

        ArrayList listaUsuarios = new ArrayList();

        if (rbJSON.isSelected()) {

            JSONArray json_array = new JSONArray(contenido);
            for (int i = 0; i < json_array.length(); i++) {
                JSONObject json_object = json_array.getJSONObject(i);
                int id_usuario = json_object.getInt("id_usuario");
                String nombre = json_object.getString("nombre");
                String password = json_object.getString("password");
                int tipo_usuario = json_object.getInt("tipo");
                String fecha_registro = json_object.getString("fecha_registro");
                Usuario usuario = new Usuario(id_usuario, nombre, password, tipo_usuario, fecha_registro);
                listaUsuarios.add(usuario);
            }

        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                Element document_element = dom.getDocumentElement();

                NodeList node_list = document_element.getElementsByTagName("usuario");

                for (int i = 0; i < node_list.getLength(); i++) {

                    Element element = (Element) node_list.item(i);

                    int id_usuario = funcion.getIntTagXML(element, "id_usuario");
                    String nombre = funcion.getStringTagXML(element, "nombre");
                    String password = funcion.getStringTagXML(element, "password");
                    int tipo_usuario = funcion.getIntTagXML(element, "tipo");
                    String fecha_registro = funcion.getStringTagXML(element, "fecha_registro");
                    Usuario usuario = new Usuario(id_usuario, nombre, password, tipo_usuario, fecha_registro);
                    listaUsuarios.add(usuario);
                }

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        for (int i = 0; i < listaUsuarios.size(); i++) {

            Usuario usuario = (Usuario) listaUsuarios.get(i);

            int id_usuario = usuario.getId_usuario();
            String nombre = usuario.getNombre();
            String password = usuario.getPassword();
            int tipo_usuario = usuario.getTipo();
            String fecha_registro = usuario.getFecha_registro();

            String nombre_tipo = "";

            if (tipo_usuario == 1) {
                nombre_tipo = "Administrador";
            } else {
                nombre_tipo = "Usuario";
            }

            if (nombre.toLowerCase().contains(txtBuscarUsuario.getText().toLowerCase())) {
                DefaultTableModel modelo = (DefaultTableModel) lvUsuarios.getModel();
                modelo.addRow(new Object[]{id_usuario, nombre_tipo, nombre, fecha_registro});
            }
        }

    }

    public void cargarCamposUsuario(int id_usuario_to_load) {

        String url = txtURL.getText();
        String tipo = "";

        if (rbJSON.isSelected()) {
            tipo = "json";
        } else {
            tipo = "xml";
        }

        String contenido = funcion.getApi(url + "/rest/" + tipo + "/usuarios/" + id_usuario_to_load, tipo);

        int id_usuario = 0;
        String nombre = "";
        String password = "";
        int tipo_usuario = 0;
        String fecha_registro = "";

        if (rbJSON.isSelected()) {

            JSONObject json_object = new JSONObject(contenido);

            id_usuario = json_object.getInt("id_usuario");
            nombre = json_object.getString("nombre");
            password = json_object.getString("password");
            tipo_usuario = json_object.getInt("tipo");
            fecha_registro = json_object.getString("fecha_registro");
        } else {

            try {
                DocumentBuilderFactory document = DocumentBuilderFactory.newInstance();

                DocumentBuilder builder = document.newDocumentBuilder();

                InputSource stream = new InputSource();

                stream.setCharacterStream(new StringReader(contenido));

                Document dom = builder.parse(stream);

                XPathFactory factory = XPathFactory.newInstance();
                XPath xpath = factory.newXPath();

                id_usuario = Integer.parseInt(xpath.evaluate("//usuario/id_usuario", dom));
                nombre = (String) xpath.evaluate("//usuario/nombre", dom);
                password = (String) xpath.evaluate("//usuario/password", dom);
                tipo_usuario = Integer.parseInt(xpath.evaluate("//usuario/tipo", dom));
                fecha_registro = (String) xpath.evaluate("//usuario/fecha_registro", dom);

            } catch (Exception ex) {
                Logger.getLogger(FormHome.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        String nombre_tipo = "";

        if (tipo_usuario == 1) {
            nombre_tipo = "Administrador";
        } else {
            nombre_tipo = "Usuario";
        }

        txtID_Usuario.setText(Integer.toString(id_usuario));
        txtUsuario.setText(nombre);
        cmbTipo.setSelectedItem(nombre_tipo);
    }

    private void lvProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lvProductosMouseClicked
        int row = lvProductos.getSelectedRow();
        int id_producto = (Integer) lvProductos.getValueAt(row, 0);
        if (row >= 0) {
            cargarCamposProducto(id_producto);
        }
    }//GEN-LAST:event_lvProductosMouseClicked

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        recargarListaProductos();
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void lvProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lvProveedoresMouseClicked
        int row = lvProveedores.getSelectedRow();
        int id_proveedor = (Integer) lvProveedores.getValueAt(row, 0);
        if (row >= 0) {
            cargarCamposProveedor(id_proveedor);
        }
    }//GEN-LAST:event_lvProveedoresMouseClicked

    private void btnBuscarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProveedorActionPerformed
        cargarListaProveedores();
    }//GEN-LAST:event_btnBuscarProveedorActionPerformed

    private void lvUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lvUsuariosMouseClicked
        int row = lvUsuarios.getSelectedRow();
        int id_usuario = (Integer) lvUsuarios.getValueAt(row, 0);
        if (row >= 0) {
            cargarCamposUsuario(id_usuario);
        }
    }//GEN-LAST:event_lvUsuariosMouseClicked

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
        cargarListaUsuarios();
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void btnGET_ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGET_ProductoActionPerformed
        recargarListaProductos();
    }//GEN-LAST:event_btnGET_ProductoActionPerformed

    private void btnPOST_ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOST_ProductoActionPerformed
        Producto p = new Producto();
        p.setNombre_producto(txtNombre.getText());
        p.setDescripcion(txtDescripcion.getText());
        p.setPrecio(Double.valueOf(txtPrecio.getText()));
        p.setFecha_registro(funcion.fecha_del_dia());
        int id_proveedor = ((Proveedor) lista_proveedores.get(cmbProveedor.getSelectedIndex())).getId_proveedor();
        p.setId_proveedor(id_proveedor);
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.postApi(txtURL.getText() + "/rest/json/productos", "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProductos();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPOST_ProductoActionPerformed

    private void btnPUT_ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPUT_ProductoActionPerformed
        Producto p = new Producto();
        p.setId_producto(Integer.parseInt(txtID_Producto.getText()));
        p.setNombre_producto(txtNombre.getText());
        p.setDescripcion(txtDescripcion.getText());
        p.setPrecio(Double.valueOf(txtPrecio.getText()));
        p.setFecha_registro(funcion.fecha_del_dia());
        int id_proveedor = ((Proveedor) lista_proveedores.get(cmbProveedor.getSelectedIndex())).getId_proveedor();
        p.setId_proveedor(id_proveedor);
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.putApi(txtURL.getText() + "/rest/json/productos/" + p.getId_producto(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProductos();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPUT_ProductoActionPerformed

    private void btnDEL_ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDEL_ProductoActionPerformed
        Producto p = new Producto();
        p.setId_producto(Integer.parseInt(txtID_Producto.getText()));
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.deleteApi(txtURL.getText() + "/rest/json/productos/" + p.getId_producto(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProductos();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnDEL_ProductoActionPerformed

    private void btnCLEAR_ProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLEAR_ProductoActionPerformed
        txtID_Producto.setText("");
        txtNombre.setText("");
        txtDescripcion.setText("");
        cmbProveedor.setSelectedIndex(0);
        txtPrecio.setText("");
    }//GEN-LAST:event_btnCLEAR_ProductoActionPerformed

    private void btnGET_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGET_ProveedorActionPerformed
        cargarListaProveedores();
    }//GEN-LAST:event_btnGET_ProveedorActionPerformed

    private void btnCLEAR_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLEAR_ProveedorActionPerformed
        txtID_Proveedor.setText("");
        txtNombreEmpresa.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
    }//GEN-LAST:event_btnCLEAR_ProveedorActionPerformed

    private void btnGET_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGET_UsuarioActionPerformed
        cargarListaUsuarios();
    }//GEN-LAST:event_btnGET_UsuarioActionPerformed

    private void btnPOST_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOST_ProveedorActionPerformed
        Proveedor p = new Proveedor();
        p.setNombre_empresa(txtNombreEmpresa.getText());
        p.setDireccion(txtDireccion.getText());
        p.setTelefono(Integer.parseInt(txtTelefono.getText()));
        p.setFecha_registro(funcion.fecha_del_dia());
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.postApi(txtURL.getText() + "/rest/json/proveedores", "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProveedores();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPOST_ProveedorActionPerformed

    private void btnPUT_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPUT_ProveedorActionPerformed
        Proveedor p = new Proveedor();
        p.setId_proveedor(Integer.parseInt(txtID_Proveedor.getText()));
        p.setNombre_empresa(txtNombreEmpresa.getText());
        p.setDireccion(txtDireccion.getText());
        p.setTelefono(Integer.parseInt(txtTelefono.getText()));
        p.setFecha_registro(funcion.fecha_del_dia());
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.putApi(txtURL.getText() + "/rest/json/proveedores/" + p.getId_proveedor(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProveedores();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPUT_ProveedorActionPerformed

    private void btnDEL_ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDEL_ProveedorActionPerformed
        Proveedor p = new Proveedor();
        p.setId_proveedor(Integer.parseInt(txtID_Proveedor.getText()));
        Gson gson = new Gson();
        String json = gson.toJson(p);
        String contenido = funcion.deleteApi(txtURL.getText() + "/rest/json/proveedores/" + p.getId_proveedor(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaProveedores();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnDEL_ProveedorActionPerformed

    private void btnPOST_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOST_UsuarioActionPerformed
        Usuario u = new Usuario();
        String nombre = txtUsuario.getText();
        String password = funcion.md5_encode(txtPassword.getText());
        int tipo = 0;
        if (cmbTipo.getSelectedIndex() == 1) {
            tipo = 1;
        } else {
            tipo = 2;
        }
        String fecha_registro = funcion.fecha_del_dia();
        u.setNombre(nombre);
        u.setPassword(password);
        u.setTipo(tipo);
        u.setFecha_registro(fecha_registro);
        Gson gson = new Gson();
        String json = gson.toJson(u);
        String contenido = funcion.postApi(txtURL.getText() + "/rest/json/usuarios", "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaUsuarios();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPOST_UsuarioActionPerformed

    private void btnPUT_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPUT_UsuarioActionPerformed
        Usuario u = new Usuario();
        int id_usuario = Integer.parseInt(txtID_Usuario.getText());
        String nombre = txtUsuario.getText();
        String password = funcion.md5_encode(txtPassword.getText());
        int tipo = 0;
        if (cmbTipo.getSelectedIndex() == 1) {
            tipo = 1;
        } else {
            tipo = 2;
        }
        String fecha_registro = funcion.fecha_del_dia();
        u.setId_usuario(id_usuario);
        u.setNombre(nombre);
        u.setPassword(password);
        u.setTipo(tipo);
        u.setFecha_registro(fecha_registro);
        Gson gson = new Gson();
        String json = gson.toJson(u);
        String contenido = funcion.putApi(txtURL.getText() + "/rest/json/usuarios/" + u.getId_usuario(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaUsuarios();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnPUT_UsuarioActionPerformed

    private void btnDEL_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDEL_UsuarioActionPerformed
        Usuario u = new Usuario();
        int id_usuario = Integer.parseInt(txtID_Usuario.getText());
        int tipo = 0;
        if (cmbTipo.getSelectedIndex() == 1) {
            tipo = 1;
        } else {
            tipo = 2;
        }
        String fecha_registro = funcion.fecha_del_dia();
        u.setId_usuario(id_usuario);
        u.setTipo(tipo);
        Gson gson = new Gson();
        String json = gson.toJson(u);
        String contenido = funcion.deleteApi(txtURL.getText() + "/rest/json/usuarios/" + u.getId_usuario(), "json", json);
        String message = funcion.getMessageJson(contenido);
        boolean success = funcion.getStatusJson(contenido);
        cargarListaUsuarios();
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnDEL_UsuarioActionPerformed

    private void btnCLEAR_UsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCLEAR_UsuarioActionPerformed
        txtID_Usuario.setText("");
        txtUsuario.setText("");
        txtPassword.setText("");
        cmbTipo.setSelectedIndex(0);
    }//GEN-LAST:event_btnCLEAR_UsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnBuscarProveedor;
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnCLEAR_Producto;
    private javax.swing.JButton btnCLEAR_Proveedor;
    private javax.swing.JButton btnCLEAR_Usuario;
    private javax.swing.JButton btnDEL_Producto;
    private javax.swing.JButton btnDEL_Proveedor;
    private javax.swing.JButton btnDEL_Usuario;
    private javax.swing.JButton btnGET_Producto;
    private javax.swing.JButton btnGET_Proveedor;
    private javax.swing.JButton btnGET_Usuario;
    private javax.swing.JButton btnPOST_Producto;
    private javax.swing.JButton btnPOST_Proveedor;
    private javax.swing.JButton btnPOST_Usuario;
    private javax.swing.JButton btnPUT_Producto;
    private javax.swing.JButton btnPUT_Proveedor;
    private javax.swing.JButton btnPUT_Usuario;
    private javax.swing.JComboBox cmbProveedor;
    private javax.swing.JComboBox cmbTipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel jpAgregarUsuario;
    private javax.swing.JPanel jpDatosProducto;
    private javax.swing.JPanel jpDatosProveedor;
    private javax.swing.JPanel jpIngreseURL;
    private javax.swing.JPanel jpProductos;
    private javax.swing.JPanel jpProveedores;
    private javax.swing.JPanel jpTipo;
    private javax.swing.JPanel jpUsuarios;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lblNombreBuscar;
    private javax.swing.JLabel lblNombreBuscar1;
    private javax.swing.JLabel lblNombreBuscar2;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPrecio;
    private javax.swing.JLabel lblProveedor;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable lvProductos;
    private javax.swing.JTable lvProveedores;
    private javax.swing.JTable lvUsuarios;
    private javax.swing.JRadioButton rbJSON;
    private javax.swing.JRadioButton rbXML;
    private javax.swing.JTabbedPane tpOptions;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JTextField txtBuscarProveedor;
    private javax.swing.JTextField txtBuscarUsuario;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtID_Producto;
    private javax.swing.JTextField txtID_Proveedor;
    private javax.swing.JTextField txtID_Usuario;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreEmpresa;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtURL;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
